version: "3.9"

services:
  zookeeper:
    container_name: zookeeper
    build: ./zookeeper
    ports:
      - "${ZOOKEEPER_PORT}:2181"
    volumes:
      - ./kafka_2.13-3.0.0:/app/kafka_config
    # environment:
    #   - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka
    build: ./kafka
    ports:
      - "${KAFKA_PORT}:9092"
    volumes:
      - ./kafka_2.13-3.0.0:/app/kafka_config
    # environment:
    #   - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    #   - KAFKA_CFG_MAX_PARTITION_FETCH_BYTES=1200000000
    #   - KAFKA_CFG_MAX_REQUEST_SIZE=1200000000
    #   - ALLOW_PLAINTEXT_LISTENER=yes
    #   - KAFKA_INTER_BROKER_USER=${KAFKA_INTER_BROKER_USER}
    #   - KAFKA_INTER_BROKER_PASSWORD=${KAFKA_INTER_BROKER_USER}
    #   - KAFKA_CLIENT_USERS=${KAFKA_INTER_BROKER_USER}
    #   - KAFKA_CLIENT_PASSWORDS=${KAFKA_INTER_BROKER_USER}
    #   - KAFKA_CREATE_TOPICS="${KAFKA_CREATE_TOPICS}:${KAFKA_TOPIC_PARTITION}:${KAFKA_TOPIC_REPLICA}"
    depends_on:
      - zookeeper

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./${PROMETHEUS_VOLUEM}:/etc/prometheus
    links:
      - kafka

# volumes:
#   zookeeper_data:
#     driver: local
#   kafka_data:
#     driver: local